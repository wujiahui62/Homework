help("read.csv")
?read.csv
data <- read.csv(file.choose(), header = TRUE)
data <- read.csv(file.choose(), header = TRUE)
options(max.print = 100000)
data1 <- read.csv(file.choose(), header = true)
write.table(data1, file = "/Users/jiahuiwu/Desktop/CIS660/lab1/VTargetBuyers_TF.txt",
col.names = TRUE)
setwd("/Users/jiahuiwu/Desktop/CIS660/lab1")
options(max.print = 100000)
data1 <- read.csv("VTargetBuyers.csv", header = TRUE)
cuts <- cut(data1$Age, breaks = c(30, 40, 50, 60, 70, 102),
label = c(30, 40, 50, 60, 70),
right = FALSE)
data1$Age <- cuts
x <- data1$YearlyIncome
a = min(x)
b = max(x)
newIncome <- function(x){(x - a) / (b - a)}
data1$YearlyIncome <- apply(data1[2], 2, newIncome)
data1$CommuteDistance <- as.character(data1$CommuteDistance)
data1$CommuteDistance[which(data1$CommuteDistance == "0-1 Miles")] <- "1"
data1$CommuteDistance[which(data1$CommuteDistance == "1-2 Miles")] <- "2"
data1$CommuteDistance[which(data1$CommuteDistance == "2-5 Miles")] <- "3"
data1$CommuteDistance[which(data1$CommuteDistance == "5-10 Miles")] <- "4"
data1$CommuteDistance[which(data1$CommuteDistance == "10+ Miles")] <- "5"
data1$CommuteDistance <- as.numeric(data1$CommuteDistance)
cd <- data1$CommuteDistance
newdis <- function(cd){(cd - 1) / (5 - 1)}
data1$CommuteDistance <- apply(data1[3], 2, newdis)
install.packages("maps")
cd <- data1$CommuteDistance
newdis <- function(cd){(cd - 1) / (5 - 1)}
data1$CommuteDistance <- apply(data1[3], 2, newdis)
test1 <- data1[sample(nrow(data1), 100), ]
ecdist <- test1[, c(1, 2, 3)]
library(fields)
ecdistMatrix = rdist(ecdist, ecdist)
write.table(ecdistMatrix, file = "ecdistMatrix.txt",
row.names = FALSE, col.names = FALSE)
install.packages("spam")
install.packages("grid")
library(fields)
ecdistMatrix = rdist(ecdist, ecdist)
write.table(ecdistMatrix, file = "ecdistMatrix.txt",
row.names = FALSE, col.names = FALSE)
hamdist <- test1[, c(4, 7, 8)]
install.packages("grid")
install.packages("spam")
install.packages("spam")
R1=ifelse(hamdist$Region=="Pacific", 1, 0)
R2=ifelse(hamdist$Region=="North America", 1, 0)
R3=ifelse(hamdist$Region=="Europe", 1, 0)
E1=ifelse(hamdist$EnglishOccupation=="Professional", 1, 0)
E2=ifelse(hamdist$EnglishOccupation=="Manual", 1, 0)
E3=ifelse(hamdist$EnglishOccupation=="Skilled Manual", 1, 0)
E4=ifelse(hamdist$EnglishOccupation=="Clerical", 1, 0)
E5=ifelse(hamdist$EnglishOccupation=="Management", 1, 0)
})
hamdist_bi <- within(hamdist, {
R1=ifelse(hamdist$Region=="Pacific", 1, 0)
R2=ifelse(hamdist$Region=="North America", 1, 0)
R3=ifelse(hamdist$Region=="Europe", 1, 0)
E1=ifelse(hamdist$EnglishOccupation=="Professional", 1, 0)
E2=ifelse(hamdist$EnglishOccupation=="Manual", 1, 0)
E3=ifelse(hamdist$EnglishOccupation=="Skilled Manual", 1, 0)
E4=ifelse(hamdist$EnglishOccupation=="Clerical", 1, 0)
E5=ifelse(hamdist$EnglishOccupation=="Management", 1, 0)
})
hamdist_bical <- hamdist_bi[, c(1, 4:11)]
n <- nrow(hamdist_bical)
m <- matrix(nrow=n, ncol=n)
for(i in seq_len(n - 1))
for(j in seq(i, n))
m[j, i] <- m[i, j] <- sum(hamdist_bical[i,] != hamdist_bical[j,])
m
n <- nrow(hamdist_bical)
m <- matrix(nrow=n, ncol=n)
for(i in seq_len(n))
for(j in seq(i, n))
m[j, i] <- m[i, j] <- sum(hamdist_bical[i,] != hamdist_bical[j,])
m
write.table(m, file = "hamdist.txt", row.names = FALSE, col.names = FALSE)
n <- nrow(hamdist_bical)
m <- matrix(nrow=n, ncol=n)
for(i in seq_len(n))
for(j in seq(i, n))
m[j, i] <- m[i, j] <- sum(hamdist_bical[i,] != hamdist_bical[j,])
test2 <- data1[sample(nrow(data1), 3), ]
n <- nrow(hamdist_bical)
m <- matrix(nrow=n, ncol=n)
for(i in seq_len(n))
for(j in seq(i, n)){
rs <- sum(test2[i,] != test2[j,])
q <- sum(test2[i,] == 1 & test2[j,] == 1)
m[i, j] <- rs / (rs + q)
}
n <- nrow(test2)
m <- matrix(nrow=n, ncol=n)
for(i in seq_len(n))
for(j in seq(i, n)){
rs <- sum(test2[i,] != test2[j,])
q <- sum(test2[i,] == 1 & test2[j,] == 1)
m[i, j] <- rs / (rs + q)
}
m
q
q <- sum(test2[2,] == 1 & test2[3,] == 1)
q
View(test2)
View(test2)
View(test2)
setwd("/Users/jiahuiwu/Desktop/CIS660/lab1")
options(max.print = 100000)
data1 <- read.csv("VTargetBuyers.csv", header = TRUE)
cuts <- cut(data1$Age, breaks = c(30, 40, 50, 60, 70, 102),
label = c(30, 40, 50, 60, 70),
right = FALSE)
data1$Age <- cuts
x <- data1$YearlyIncome
a = min(x)
b = max(x)
newIncome <- function(x){(x - a) / (b - a)}
data1$YearlyIncome <- apply(data1[2], 2, newIncome)
data1$CommuteDistance <- as.character(data1$CommuteDistance)
data1$CommuteDistance[which(data1$CommuteDistance == "0-1 Miles")] <- "1"
data1$CommuteDistance[which(data1$CommuteDistance == "1-2 Miles")] <- "2"
data1$CommuteDistance[which(data1$CommuteDistance == "2-5 Miles")] <- "3"
data1$CommuteDistance[which(data1$CommuteDistance == "5-10 Miles")] <- "4"
data1$CommuteDistance[which(data1$CommuteDistance == "10+ Miles")] <- "5"
data1$CommuteDistance <- as.numeric(data1$CommuteDistance)
cd <- data1$CommuteDistance
newdis <- function(cd){(cd - 1) / (5 - 1)}
data1$CommuteDistance <- apply(data1[3], 2, newdis)
test1 <- data1[sample(nrow(data1), 100), ]
ecdist <- test1[, c(1, 2, 3)]
install.packages("spam")
install.packages("spam")
install.packages("grid")
install.packages("grid")
library(fields)
ecdistMatrix = rdist(ecdist, ecdist)
write.table(ecdistMatrix, file = "ecdistMatrix.txt",
row.names = FALSE, col.names = FALSE)
View(test1)
View(test1)
hamdist_bi <- within(hamdist, {
R1=ifelse(hamdist$Region=="Pacific", 1, 0)
R2=ifelse(hamdist$Region=="North America", 1, 0)
R3=ifelse(hamdist$Region=="Europe", 1, 0)
E1=ifelse(hamdist$EnglishOccupation=="Professional", 1, 0)
E2=ifelse(hamdist$EnglishOccupation=="Manual", 1, 0)
E3=ifelse(hamdist$EnglishOccupation=="Skilled Manual", 1, 0)
E4=ifelse(hamdist$EnglishOccupation=="Clerical", 1, 0)
E5=ifelse(hamdist$EnglishOccupation=="Management", 1, 0)
})
hamdist_bical <- hamdist_bi[, c(1, 4:11)]
n <- nrow(hamdist_bical)
m <- matrix(nrow=n, ncol=n)
for(i in seq_len(n))
for(j in seq(i, n))
m[j, i] <- m[i, j] <- sum(hamdist_bical[i,] != hamdist_bical[j,])
write.table(m, file = "hamdist.txt", row.names = FALSE, col.names = FALSE)
test2 <- data1[sample(nrow(hamdist_bical), 3), ]
n <- nrow(test2)
m <- matrix(nrow=n, ncol=n)
q <- sum(test2[2,] == 1 & test2[3,] == 1)
q
for(i in seq_len(n))
for(j in seq(i, n)){
rs <- sum(test2[i,] != test2[j,])
q <- sum(test2[i,] == 1 & test2[j,] == 1)
m[i, j] <- rs / (rs + q)
}
q
m
q <- sum(test2[2,] == 1 & test2[3,] == 1)
q
View(test2)
View(test2)
View(hamdist_bical)
View(hamdist_bical)
test2 <- hamdist_bical[sample(nrow(hamdist_bical), 3), ]
n <- nrow(test2)
m <- matrix(nrow=n, ncol=n)
q <- sum(test2[2,] == 1 & test2[3,] == 1)
q
View(hamdist_bical)
View(hamdist_bical)
View(test2)
View(test2)
for(i in seq_len(n))
for(j in seq(i, n)){
rs <- sum(test2[i,] != test2[j,])
q <- sum(test2[i,] == 1 & test2[j,] == 1)
m[i, j] <- rs / (rs + q)
}
m
n <- nrow(hamdist_bical)
m <- matrix(nrow=n, ncol=n)
for(i in seq_len(n))
for(j in seq(i, n))
m[i, j] <- sum(hamdist_bical[i,] != hamdist_bical[j,])
write.table(m, file = "hamdist.txt", row.names = FALSE, col.names = FALSE)
k <- matrix(nrow=n, ncol=n)
for(i in seq_len(n))
for(j in seq(i, n)){
rs <- sum(test2[i,] != test2[j,])
q <- sum(test2[i,] == 1 & test2[j,] == 1)
k[i, j] <- rs / (rs + q)
}
k
k
n <- nrow(test2)
k <- matrix(nrow=n, ncol=n)
for(i in seq_len(n))
for(j in seq(i, n)){
rs <- sum(test2[i,] != test2[j,])
q <- sum(test2[i,] == 1 & test2[j,] == 1)
k[i, j] <- rs / (rs + q)
}
k
n <- nrow(hamdist_bical)
k <- matrix(nrow=n, ncol=n)
for(i in seq_len(n))
for(j in seq(i, n)){
rs <- sum(hamdist_bical[i,] != hamdist_bical[j,])
q <- sum(hamdist_bical[i,] == 1 & hamdist_bical[j,] == 1)
k[i, j] <- rs / (rs + q)
}
n <- nrow(hamdist_bical)
k <- matrix(nrow=n, ncol=n)
for(i in seq_len(n))
for(j in seq(i, n)){
rs <- sum(hamdist_bical[i,] != hamdist_bical[j,])
q <- sum(hamdist_bical[i,] == 1 & hamdist_bical[j,] == 1)
k[j, i] <- k[i, j] <- rs / (rs + q)
}
write.table(k, file = "jacdist.txt", row.names = FALSE, col.names = FALSE)
View(data1)
View(data1)
View(hamdist_bi)
View(hamdist)
View(data1)
View(test1)
cossim <- test1[, c(5, 6)]
View(cossim)
View(cossim)
View(cossim)
View(cossim)
cos.sim <- function(ix)
{
A = test1[ix[1],]
B = test1[ix[2],]
return( sum(A*B)/sqrt(sum(A^2)*sum(B^2)) )
}
n <- nrow(test1)
cmb <- expand.grid(i=1:n, j=1:n)
C <- matrix(apply(cmb,1,cos.sim),n,n)
c
cos.sim <- function(ix)
{
A = test1[ix[1],]
B = test1[ix[2],]
return( sum(A*B)/sqrt(sum(A^2)*sum(B^2)) )
}
n <- nrow(test1)
cmb <- expand.grid(i=1:n, j=1:n)
C <- matrix(nrow=n, ncol=n)
C <- matrix(apply(cmb,1,cos.sim),n,n)
?cosine
?isa
install.packages("isa")
